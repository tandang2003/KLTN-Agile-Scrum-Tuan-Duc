@startuml
autonumber

actor Student as SV
participant "View\n(/manager/project/:id/dashboard)" as View
participant "Dashboard\nController" as Controller
participant "Dashboard\nService" as Service
participant "Sprint\nRepository" as SprintRepo
participant "Issue\nRepository" as IssueRepo
participant "Snapshot\nRepository" as SnapRepo
participant "MySQL" as MySQL
participant "MongoDB" as MongoDB
SV -> View : Student accesses
activate SV

activate View
View -> Controller : GET /dashboard/project?\nprojectId=projectId\n&sprintId=sprintId

activate Controller
Controller -> Service : getForStudent(req)

activate Service

Service -> Service: getFor\nSingleSprint\n(projectId, \n sprintId)
Service -> SprintRepo: findById\n(sprintId)
activate SprintRepo
SprintRepo -> MySQL:  findById\n(sprintId)
activate MySQL
MySQL --> SprintRepo:  sprint model
deactivate MySQL
SprintRepo --> Service:  sprint model
deactivate SprintRepo

alt sprint not expired:
  Service -> IssueRepo: countByProjectId\nAndSprintId\n(projectId, sprintId)
  activate IssueRepo
  IssueRepo -> MySQL: countByProjectId\nAndSprintId\n(projectId, sprintId)
  activate MySQL
  MySQL --> IssueRepo:  issueCreated
  deactivate MySQL
  IssueRepo -> Service:  issueCreated
  deactivate IssueRepo

  Service -> IssueRepo: countByProjectId\nAndSprintId\nAndStatus\n(projectId, sprintId, \n IssueStatus.DONE);
  activate IssueRepo
  IssueRepo -> MySQL: countByProjectId\nAndSprintId\nAndStatus\n(projectId, sprintId, \n IssueStatus.DONE);
  activate MySQL
  MySQL --> IssueRepo:  issueDone
  deactivate MySQL
  IssueRepo -> Service:  issueDone
  deactivate IssueRepo

  Service -> IssueRepo: countBy\nProjectIdAnd\nSprintIdAndStatusNot\n(projectId, sprintId,\n IssueStatus.DONE);
  activate IssueRepo
  IssueRepo -> MySQL: countBy\nProjectIdAnd\nSprintIdAndStatusNot\n(projectId, sprintId, \n IssueStatus.DONE);
  activate MySQL
  MySQL --> IssueRepo:  issueFailed
  deactivate MySQL
  IssueRepo -> Service:  issueFailed
  deactivate IssueRepo
else
  Service -> SnapRepo: findByProjectId\nAndSprintId(\nprojectId, sprintId)
  activate SnapRepo
  SnapRepo -> MongoDB: findByProjectId\nAndSprintId\n(projectId, sprintId)
  activate MongoDB
  MongoDB --> SnapRepo:  issue snapshot
  deactivate MongoDB
  SnapRepo -> Service:  issue snapshot
  deactivate SnapRepo
  Service -> Service: set issueCreated
  Service -> Service: set issueDone
  Service -> Service: set issueFailed
end
Service --> Controller:  response
Controller --> View:  response
deactivate Controller
View --> SV: Display Dashboard
deactivate View
deactivate SV
@enduml
