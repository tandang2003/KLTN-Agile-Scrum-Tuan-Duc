@startuml
autonumber

actor Student as SV

participant "View\n(/user/skill)" as View
participant "Skill\nController" as Controller
participant "Skill\nService" as SkillService
participant "User\nService" as UserService
participant "Skill\nRepository" as SkillRepository
participant "PersonalSkill\nRepository" as PKR

activate SV
SV -> View : student accesses skill page
activate View
View --> SV : display list of skills and proficiency levels

SV -> View : click "Add Skill"
View --> SV : show add skill form
SV -> View : enter skill name and proficiency level

View -> Controller : POST /skill
activate Controller

Controller -> SkillService : createSkill(skillName, proficiency)
activate SkillService

SkillService -> UserService : getCurrentUser
activate UserService
UserService --> SkillService : return currentUser
deactivate UserService

SkillService -> SkillRepository : existsByName(skillName)
activate SkillRepository
SkillRepository --> SkillService : return boolean
deactivate SkillRepository

alt Skill does not exist
    SkillService -> SkillRepository : save(skillModel)
    activate SkillRepository
    SkillRepository --> SkillService : return savedSkill
    deactivate SkillRepository
else Skill already exists
    SkillService -> SkillRepository : findByName(skillName)
    activate SkillRepository
    SkillRepository --> SkillService : return existingSkill
    deactivate SkillRepository
end

SkillService -> PKR : save(personalSkillModel)
activate PKR
PKR --> SkillService : return void
deactivate PKR

SkillService --> Controller : return void
deactivate SkillService

Controller --> View : return success
deactivate Controller

View --> SV : notify "Skill added successfully"
deactivate View
deactivate SV
@enduml
