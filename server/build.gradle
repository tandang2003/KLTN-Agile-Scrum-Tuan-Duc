plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kltn'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    springDocVersion = '2.8.6'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation("com.cloudinary:cloudinary-http44:1.39.0")

}

tasks.named('test') {
    useJUnitPlatform()
}
