openapi: 3.0.1
info:
  title: My API
  description: |
    # Overview 
    
    API documentation for Spring Boot application
    ## Rules about api response format
    
    ### Structure Base Api
    
    When a request sent to server, it always return a response has body like:
    
    ```json
    {
      "code": 401,
      "message": "Login"
      "data": Object
    }
    ```
    - `error`: status code
    - `message`: description about api
    - `data`: data will return for client, data structure is general
    
    ### Validation Api
    When a request failed because some field in body is missing, empty or not valid,
    API will return a response with **status: 422 (Unprocessable entity)**
    
    ```json
    {
      "code": 422,
      "message": "Validation Error",
      "error": [
        {
          "field": "field target"
          "message": "message"
        },
       {
          "field": "field target"
          "message": "message"
        }
      ]
    }
    ```
    - `code`: status code
    - `message`: description about api
    - `error`: contain array present field and message error
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /auth:
    post:
      summary: Authenticate user
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uniId:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Successful authentication
          headers:
            headers:
              Set-Cookie:
                description: >
                  Sets the `refresh-token` cookie with `HttpOnly` and `Max-Age` attributes.  
                  Example: `refresh-token=abc.def.ghi; HttpOnly; Max-Age=432000 ; Path=/refresh`
                schema:
                  type: string
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResponseApi"
                  - type: object
                    properties:
                      data:
                        properties:
                          access-token:
                            type: string
                            description: The JWT token for authentication
                          user:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The user ID storing in the database
                              uniId:
                                type: string
                                description: The university ID student or teacher of the user
                              name:
                                type: string
                                description: The name of the user
                              email:
                                type: string
                                description: The email student or teacher of the user
                              role:
                                type: string
                                description: the user role name
        #        401:
        #          description: Invalid credentials
        #          content:
        #            application/json:
        #              schema:
        #                allOf:
        #                  - $ref: '#/components/schemas/ResponseApi'
        #                default:
        #                  statusCode: 401
        #                  message: "Invalid credentials"
        422:
          description: Email or password invalid
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseApi"
                default:
                  statusCode: 422
                  message: "Email or password invalid"
  /auth/register:
    post:
      summary: Register student account
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uniId:
                  type: string
                password:
                  type: string
                name:
                  type: string
      responses:
        200:
          description: Successful Registration
        409:
          description: Account with uniId exist
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseApi"
                default:
                  statusCode: 409
                  error: "EXISTED_DATA"
                  message: "Data already exists"

components:
  schemas:
    ResponseApi:
      $ref: "./components/response-api.yml"
    ValidationErrorApi:
      $ref: "./components/validation-error.yml"
    UnauthorizedErrorApi:
      $ref: "/components/unauthenticated-error-api.yml"
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT