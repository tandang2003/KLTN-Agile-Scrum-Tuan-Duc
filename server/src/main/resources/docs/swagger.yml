openapi: 3.0.1
info:
  title: My API
  description: API documentation for my Spring Boot application
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
components:
  schemas:
    ResponseApi:
      $ref: "./components/response-api.yml"
paths:
  /auth:
    post:
      summary: Authenticate user
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uniId:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Successful authentication
          headers:
            headers:
              Set-Cookie:
                description: >
                  Sets the `refresh-token` cookie with `HttpOnly` and `Max-Age` attributes.  
                  Example: `refresh-token=abc.def.ghi; HttpOnly; Max-Age=432000 ; Path=/refresh`
                schema:
                  type: string
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ResponseApi'
                  - type: object
                    properties:
                      data:
                        properties:
                          access-token:
                            type: string
                            description: The JWT token for authentication
                          user:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The user ID storing in the database
                              uniId:
                                type: string
                                description: The university ID student or teacher of the user
                              name:
                                type: string
                                description: The name of the user
                              email:
                                type: string
                                description: The email student or teacher of the user
                              role:
                                type: string
                                description: the user role name
        #        401:
        #          description: Invalid credentials
        #          content:
        #            application/json:
        #              schema:
        #                allOf:
        #                  - $ref: '#/components/schemas/ResponseApi'
        #                default:
        #                  statusCode: 401
        #                  message: "Invalid credentials"
        422:
          description: Email or password invalid
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseApi'
                default:
                  statusCode: 422
                  message: "Email or password invalid"
  /auth/register:
    post:
      summary: Register student account
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uniId:
                  type: string
                password:
                  type: string
                name:
                  type: string
      responses:
        201:
          description: Successful Registration
        409:
          description: User already exists
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseApi'
                default:
                  statusCode: 409
                  error: "EXISTED_DATA"
                  message: "Data already exists"



