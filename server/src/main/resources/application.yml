spring:
  application:
    name: server
    security:
      access-token:
        time-of-life: 1m
        key:
          private-key: key/access/private_key.pem
          public-key: key/access/public_key.pem
      refresh-token:
        time-of-life: 120H
        key:
          private-key: key/refresh/private_key.pem
          public-key: key/refresh/public_key.pem
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  jackson:
    default-property-inclusion: non_null
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    #      properties:
    #        spring:
    #          json:
    #            type:
    #              mapping:
    #                  "send_object_customer: com.example.kafkaspringexample.data.Customer"
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    #      properties:
    #        spring:
    #          json:
    #            trusted:
    #              packages: "send_object_customer"
    #            type:
    #              mapping: "send_object_customer: com.example.springkafkaconsumerexample.data.Customer"
    bootstrap-servers: localhost:9092, localhost:9093, localhost:9094

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    urls:
      - name: OpenAPI YAML
        url: /swagger.yml

server:
  reactive:
    session:
      cookie:
        max-age: 5
logging:
  level:
    org:
      springframework:
        security: off